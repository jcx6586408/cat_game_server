// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: pb/room.proto

package msg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RoomServerConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RoomServerConnectRequest) Reset() {
	*x = RoomServerConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomServerConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomServerConnectRequest) ProtoMessage() {}

func (x *RoomServerConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomServerConnectRequest.ProtoReflect.Descriptor instead.
func (*RoomServerConnectRequest) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{0}
}

//-----------------房间创建---------------------
type CreateRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member *Member `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"` // 成员信息
}

func (x *CreateRoomRequest) Reset() {
	*x = CreateRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomRequest) ProtoMessage() {}

func (x *CreateRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomRequest.ProtoReflect.Descriptor instead.
func (*CreateRoomRequest) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRoomRequest) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

type CreateRoomReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID int32 `protobuf:"varint,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"` // 创建房间回复
}

func (x *CreateRoomReply) Reset() {
	*x = CreateRoomReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomReply) ProtoMessage() {}

func (x *CreateRoomReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomReply.ProtoReflect.Descriptor instead.
func (*CreateRoomReply) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{2}
}

func (x *CreateRoomReply) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

// 房间信息获取
type RoomInfoGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID int32 `protobuf:"varint,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
}

func (x *RoomInfoGetRequest) Reset() {
	*x = RoomInfoGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomInfoGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInfoGetRequest) ProtoMessage() {}

func (x *RoomInfoGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInfoGetRequest.ProtoReflect.Descriptor instead.
func (*RoomInfoGetRequest) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{3}
}

func (x *RoomInfoGetRequest) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

//-----------------房间匹配---------------------
type MatchRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID int32 `protobuf:"varint,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
}

func (x *MatchRoomRequest) Reset() {
	*x = MatchRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchRoomRequest) ProtoMessage() {}

func (x *MatchRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchRoomRequest.ProtoReflect.Descriptor instead.
func (*MatchRoomRequest) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{4}
}

func (x *MatchRoomRequest) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

type MatchRoomReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomInfo *RoomInfoReply `protobuf:"bytes,1,opt,name=RoomInfo,proto3" json:"RoomInfo,omitempty"`
}

func (x *MatchRoomReply) Reset() {
	*x = MatchRoomReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchRoomReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchRoomReply) ProtoMessage() {}

func (x *MatchRoomReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchRoomReply.ProtoReflect.Descriptor instead.
func (*MatchRoomReply) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{5}
}

func (x *MatchRoomReply) GetRoomInfo() *RoomInfoReply {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

type RoomAddFail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
}

func (x *RoomAddFail) Reset() {
	*x = RoomAddFail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomAddFail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomAddFail) ProtoMessage() {}

func (x *RoomAddFail) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomAddFail.ProtoReflect.Descriptor instead.
func (*RoomAddFail) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{6}
}

func (x *RoomAddFail) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

//-----------------取消房间匹配---------------------
type MatchRoomCancelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID int32 `protobuf:"varint,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
}

func (x *MatchRoomCancelRequest) Reset() {
	*x = MatchRoomCancelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchRoomCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchRoomCancelRequest) ProtoMessage() {}

func (x *MatchRoomCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchRoomCancelRequest.ProtoReflect.Descriptor instead.
func (*MatchRoomCancelRequest) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{7}
}

func (x *MatchRoomCancelRequest) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

type MatchRoomCancelReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State bool `protobuf:"varint,1,opt,name=State,proto3" json:"State,omitempty"`
}

func (x *MatchRoomCancelReply) Reset() {
	*x = MatchRoomCancelReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchRoomCancelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchRoomCancelReply) ProtoMessage() {}

func (x *MatchRoomCancelReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchRoomCancelReply.ProtoReflect.Descriptor instead.
func (*MatchRoomCancelReply) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{8}
}

func (x *MatchRoomCancelReply) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

// 房间计时
type RoomTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int32 `protobuf:"varint,1,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *RoomTime) Reset() {
	*x = RoomTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomTime) ProtoMessage() {}

func (x *RoomTime) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomTime.ProtoReflect.Descriptor instead.
func (*RoomTime) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{9}
}

func (x *RoomTime) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

// 复活消息
type MemberReliveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID       int32  `protobuf:"varint,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	BattleRoomID int32  `protobuf:"varint,2,opt,name=BattleRoomID,proto3" json:"BattleRoomID,omitempty"`
	Uuid         string `protobuf:"bytes,3,opt,name=Uuid,proto3" json:"Uuid,omitempty"`
}

func (x *MemberReliveRequest) Reset() {
	*x = MemberReliveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberReliveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberReliveRequest) ProtoMessage() {}

func (x *MemberReliveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberReliveRequest.ProtoReflect.Descriptor instead.
func (*MemberReliveRequest) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{10}
}

func (x *MemberReliveRequest) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *MemberReliveRequest) GetBattleRoomID() int32 {
	if x != nil {
		return x.BattleRoomID
	}
	return 0
}

func (x *MemberReliveRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// 复活消息返回
type MemberReliveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid   string  `protobuf:"bytes,1,opt,name=Uuid,proto3" json:"Uuid,omitempty"`
	Answer *Answer `protobuf:"bytes,2,opt,name=Answer,proto3" json:"Answer,omitempty"`
}

func (x *MemberReliveReply) Reset() {
	*x = MemberReliveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberReliveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberReliveReply) ProtoMessage() {}

func (x *MemberReliveReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberReliveReply.ProtoReflect.Descriptor instead.
func (*MemberReliveReply) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{11}
}

func (x *MemberReliveReply) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MemberReliveReply) GetAnswer() *Answer {
	if x != nil {
		return x.Answer
	}
	return nil
}

//-----------------成员匹配---------------------
type MatchMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member *Member `protobuf:"bytes,1,opt,name=Member,proto3" json:"Member,omitempty"` // 匹配人信息
}

func (x *MatchMemberRequest) Reset() {
	*x = MatchMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchMemberRequest) ProtoMessage() {}

func (x *MatchMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchMemberRequest.ProtoReflect.Descriptor instead.
func (*MatchMemberRequest) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{12}
}

func (x *MatchMemberRequest) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

type MatchMemberReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomInfo *RoomInfoReply `protobuf:"bytes,1,opt,name=RoomInfo,proto3" json:"RoomInfo,omitempty"`
}

func (x *MatchMemberReply) Reset() {
	*x = MatchMemberReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchMemberReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchMemberReply) ProtoMessage() {}

func (x *MatchMemberReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchMemberReply.ProtoReflect.Descriptor instead.
func (*MatchMemberReply) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{13}
}

func (x *MatchMemberReply) GetRoomInfo() *RoomInfoReply {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

type RoomPreAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RoomPreAddRequest) Reset() {
	*x = RoomPreAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomPreAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomPreAddRequest) ProtoMessage() {}

func (x *RoomPreAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomPreAddRequest.ProtoReflect.Descriptor instead.
func (*RoomPreAddRequest) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{14}
}

type RoomPreAddReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=Url,proto3" json:"Url,omitempty"`
}

func (x *RoomPreAddReply) Reset() {
	*x = RoomPreAddReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomPreAddReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomPreAddReply) ProtoMessage() {}

func (x *RoomPreAddReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomPreAddReply.ProtoReflect.Descriptor instead.
func (*RoomPreAddReply) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{15}
}

func (x *RoomPreAddReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

//-----------------取消成员匹配---------------------
type MatchMemberCancelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID int32 `protobuf:"varint,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
}

func (x *MatchMemberCancelRequest) Reset() {
	*x = MatchMemberCancelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchMemberCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchMemberCancelRequest) ProtoMessage() {}

func (x *MatchMemberCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchMemberCancelRequest.ProtoReflect.Descriptor instead.
func (*MatchMemberCancelRequest) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{16}
}

func (x *MatchMemberCancelRequest) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

type MatchMemberCancelReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State bool `protobuf:"varint,1,opt,name=State,proto3" json:"State,omitempty"`
}

func (x *MatchMemberCancelReply) Reset() {
	*x = MatchMemberCancelReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchMemberCancelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchMemberCancelReply) ProtoMessage() {}

func (x *MatchMemberCancelReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchMemberCancelReply.ProtoReflect.Descriptor instead.
func (*MatchMemberCancelReply) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{17}
}

func (x *MatchMemberCancelReply) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

//-----------------离线---------------------
type OfflineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=Uuid,proto3" json:"Uuid,omitempty"` // 离线玩家的uuid信息
}

func (x *OfflineRequest) Reset() {
	*x = OfflineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineRequest) ProtoMessage() {}

func (x *OfflineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineRequest.ProtoReflect.Descriptor instead.
func (*OfflineRequest) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{18}
}

func (x *OfflineRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

//-----------------加入成员---------------------
type AddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID int32   `protobuf:"varint,2,opt,name=RoomID,proto3" json:"RoomID,omitempty"` // 要加入的房间ID
	Member *Member `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`  // 要加入的成员
}

func (x *AddRequest) Reset() {
	*x = AddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRequest) ProtoMessage() {}

func (x *AddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRequest.ProtoReflect.Descriptor instead.
func (*AddRequest) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{19}
}

func (x *AddRequest) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *AddRequest) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

type AddReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomInfo *RoomInfoReply `protobuf:"bytes,1,opt,name=RoomInfo,proto3" json:"RoomInfo,omitempty"`
}

func (x *AddReply) Reset() {
	*x = AddReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReply) ProtoMessage() {}

func (x *AddReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReply.ProtoReflect.Descriptor instead.
func (*AddReply) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{20}
}

func (x *AddReply) GetRoomInfo() *RoomInfoReply {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

//-----------------离开成员---------------------
type LeaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID int32   `protobuf:"varint,2,opt,name=RoomID,proto3" json:"RoomID,omitempty"` // 要加入的房间ID
	Member *Member `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`  // 要加入的成员
}

func (x *LeaveRequest) Reset() {
	*x = LeaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRequest) ProtoMessage() {}

func (x *LeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRequest.ProtoReflect.Descriptor instead.
func (*LeaveRequest) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{21}
}

func (x *LeaveRequest) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *LeaveRequest) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

type LeaveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State bool `protobuf:"varint,1,opt,name=State,proto3" json:"State,omitempty"`
}

func (x *LeaveReply) Reset() {
	*x = LeaveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveReply) ProtoMessage() {}

func (x *LeaveReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveReply.ProtoReflect.Descriptor instead.
func (*LeaveReply) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{22}
}

func (x *LeaveReply) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

//-----------------房间结束---------------------
type OverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID int32   `protobuf:"varint,2,opt,name=RoomID,proto3" json:"RoomID,omitempty"` // 要加入的房间ID
	Member *Member `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`  // 要加入的成员
}

func (x *OverRequest) Reset() {
	*x = OverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverRequest) ProtoMessage() {}

func (x *OverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverRequest.ProtoReflect.Descriptor instead.
func (*OverRequest) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{23}
}

func (x *OverRequest) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *OverRequest) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

type OverReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State bool `protobuf:"varint,1,opt,name=State,proto3" json:"State,omitempty"`
}

func (x *OverReply) Reset() {
	*x = OverReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverReply) ProtoMessage() {}

func (x *OverReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverReply.ProtoReflect.Descriptor instead.
func (*OverReply) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{24}
}

func (x *OverReply) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

//-----------------回答问题---------------------
type Answer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID     int32  `protobuf:"varint,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`         // 对应的房间ID
	Uuid       string `protobuf:"bytes,2,opt,name=Uuid,proto3" json:"Uuid,omitempty"`              // 用户服务端uuid
	QuestionID int32  `protobuf:"varint,3,opt,name=QuestionID,proto3" json:"QuestionID,omitempty"` // 问题ID
	Result     string `protobuf:"bytes,4,opt,name=Result,proto3" json:"Result,omitempty"`          // 回答结果
}

func (x *Answer) Reset() {
	*x = Answer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Answer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Answer) ProtoMessage() {}

func (x *Answer) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Answer.ProtoReflect.Descriptor instead.
func (*Answer) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{25}
}

func (x *Answer) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *Answer) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Answer) GetQuestionID() int32 {
	if x != nil {
		return x.QuestionID
	}
	return 0
}

func (x *Answer) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type AnswerEndReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomInfo *RoomInfoReply `protobuf:"bytes,1,opt,name=RoomInfo,proto3" json:"RoomInfo,omitempty"`
}

func (x *AnswerEndReply) Reset() {
	*x = AnswerEndReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerEndReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerEndReply) ProtoMessage() {}

func (x *AnswerEndReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerEndReply.ProtoReflect.Descriptor instead.
func (*AnswerEndReply) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{26}
}

func (x *AnswerEndReply) GetRoomInfo() *RoomInfoReply {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

type Question struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`                  // 题库ID
	Question    string `protobuf:"bytes,2,opt,name=Question,proto3" json:"Question,omitempty"`       // 问题
	AnswerA     string `protobuf:"bytes,3,opt,name=AnswerA,proto3" json:"AnswerA,omitempty"`         // 答案A
	AnswerB     string `protobuf:"bytes,4,opt,name=AnswerB,proto3" json:"AnswerB,omitempty"`         // 答案B
	AnswerC     string `protobuf:"bytes,5,opt,name=AnswerC,proto3" json:"AnswerC,omitempty"`         // 答案C
	AnswerD     string `protobuf:"bytes,6,opt,name=AnswerD,proto3" json:"AnswerD,omitempty"`         // 答案D
	RightAnswer string `protobuf:"bytes,7,opt,name=RightAnswer,proto3" json:"RightAnswer,omitempty"` // 正确答案
	Table       string `protobuf:"bytes,8,opt,name=table,proto3" json:"table,omitempty"`             // 表
}

func (x *Question) Reset() {
	*x = Question{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Question) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Question) ProtoMessage() {}

func (x *Question) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Question.ProtoReflect.Descriptor instead.
func (*Question) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{27}
}

func (x *Question) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Question) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *Question) GetAnswerA() string {
	if x != nil {
		return x.AnswerA
	}
	return ""
}

func (x *Question) GetAnswerB() string {
	if x != nil {
		return x.AnswerB
	}
	return ""
}

func (x *Question) GetAnswerC() string {
	if x != nil {
		return x.AnswerC
	}
	return ""
}

func (x *Question) GetAnswerD() string {
	if x != nil {
		return x.AnswerD
	}
	return ""
}

func (x *Question) GetRightAnswer() string {
	if x != nil {
		return x.RightAnswer
	}
	return ""
}

func (x *Question) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

type MemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid         string `protobuf:"bytes,1,opt,name=Uuid,proto3" json:"Uuid,omitempty"`                   // 用户服务端uuid
	RoomID       int32  `protobuf:"varint,11,opt,name=RoomID,proto3" json:"RoomID,omitempty"`             // 房间ID
	BattleRoomID int32  `protobuf:"varint,12,opt,name=BattleRoomID,proto3" json:"BattleRoomID,omitempty"` // 战斗房间ID
}

func (x *MemberRequest) Reset() {
	*x = MemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberRequest) ProtoMessage() {}

func (x *MemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberRequest.ProtoReflect.Descriptor instead.
func (*MemberRequest) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{28}
}

func (x *MemberRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MemberRequest) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *MemberRequest) GetBattleRoomID() int32 {
	if x != nil {
		return x.BattleRoomID
	}
	return 0
}

//-----------------成员---------------------
type Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid         string    `protobuf:"bytes,1,opt,name=Uuid,proto3" json:"Uuid,omitempty"`                   // 用户服务端uuid
	Uid          string    `protobuf:"bytes,2,opt,name=Uid,proto3" json:"Uid,omitempty"`                     // 用户Uid
	Nickname     string    `protobuf:"bytes,3,opt,name=Nickname,proto3" json:"Nickname,omitempty"`           // 用户昵称
	Icon         string    `protobuf:"bytes,4,opt,name=Icon,proto3" json:"Icon,omitempty"`                   // 用户头像
	IsMaster     bool      `protobuf:"varint,5,opt,name=IsMaster,proto3" json:"IsMaster,omitempty"`          // 是否房主
	IsRobot      bool      `protobuf:"varint,6,opt,name=IsRobot,proto3" json:"IsRobot,omitempty"`            // 是否是机器人
	IsInvite     bool      `protobuf:"varint,7,opt,name=IsInvite,proto3" json:"IsInvite,omitempty"`          // 是否邀请的人
	IsDead       bool      `protobuf:"varint,8,opt,name=IsDead,proto3" json:"IsDead,omitempty"`              // 是否死亡
	Answer       []*Answer `protobuf:"bytes,9,rep,name=Answer,proto3" json:"Answer,omitempty"`               // 回答
	SkinID       int32     `protobuf:"varint,10,opt,name=SkinID,proto3" json:"SkinID,omitempty"`             // 皮肤ID
	RoomID       int32     `protobuf:"varint,11,opt,name=RoomID,proto3" json:"RoomID,omitempty"`             // 房间ID
	BattleRoomID int32     `protobuf:"varint,12,opt,name=BattleRoomID,proto3" json:"BattleRoomID,omitempty"` // 战斗房间ID
	State        int32     `protobuf:"varint,13,opt,name=State,proto3" json:"State,omitempty"`               // 角色状态（匹配，准备，战斗）
}

func (x *Member) Reset() {
	*x = Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{29}
}

func (x *Member) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Member) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Member) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Member) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Member) GetIsMaster() bool {
	if x != nil {
		return x.IsMaster
	}
	return false
}

func (x *Member) GetIsRobot() bool {
	if x != nil {
		return x.IsRobot
	}
	return false
}

func (x *Member) GetIsInvite() bool {
	if x != nil {
		return x.IsInvite
	}
	return false
}

func (x *Member) GetIsDead() bool {
	if x != nil {
		return x.IsDead
	}
	return false
}

func (x *Member) GetAnswer() []*Answer {
	if x != nil {
		return x.Answer
	}
	return nil
}

func (x *Member) GetSkinID() int32 {
	if x != nil {
		return x.SkinID
	}
	return 0
}

func (x *Member) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *Member) GetBattleRoomID() int32 {
	if x != nil {
		return x.BattleRoomID
	}
	return 0
}

func (x *Member) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type RoomInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID         int32     `protobuf:"varint,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`                // 房间ID
	PrepareMembers []*Member `protobuf:"bytes,2,rep,name=PrepareMembers,proto3" json:"PrepareMembers,omitempty"` // 准备成员列表
	PlayingMembers []*Member `protobuf:"bytes,3,rep,name=PlayingMembers,proto3" json:"PlayingMembers,omitempty"` // 正在游戏成员列表
	Progress       int32     `protobuf:"varint,4,opt,name=Progress,proto3" json:"Progress,omitempty"`            // 当前进程(时间秒)
	MsgID          int32     `protobuf:"varint,5,opt,name=MsgID,proto3" json:"MsgID,omitempty"`                  // 消息ID
	ChangeMemeber  *Member   `protobuf:"bytes,6,opt,name=ChangeMemeber,proto3" json:"ChangeMemeber,omitempty"`   // 变更成员
	TotolQuestion  int32     `protobuf:"varint,7,opt,name=TotolQuestion,proto3" json:"TotolQuestion,omitempty"`
	CurQuestion    int32     `protobuf:"varint,8,opt,name=CurQuestion,proto3" json:"CurQuestion,omitempty"`
	Question       *Question `protobuf:"bytes,9,opt,name=Question,proto3" json:"Question,omitempty"`     // 问题
	ToTalTime      int32     `protobuf:"varint,10,opt,name=ToTalTime,proto3" json:"ToTalTime,omitempty"` // 答题总时间
	MaxMemeber     int32     `protobuf:"varint,11,opt,name=MaxMemeber,proto3" json:"MaxMemeber,omitempty"`
	BattleRoomID   int32     `protobuf:"varint,12,opt,name=BattleRoomID,proto3" json:"BattleRoomID,omitempty"` // 战斗房间ID
}

func (x *RoomInfoReply) Reset() {
	*x = RoomInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInfoReply) ProtoMessage() {}

func (x *RoomInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInfoReply.ProtoReflect.Descriptor instead.
func (*RoomInfoReply) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{30}
}

func (x *RoomInfoReply) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *RoomInfoReply) GetPrepareMembers() []*Member {
	if x != nil {
		return x.PrepareMembers
	}
	return nil
}

func (x *RoomInfoReply) GetPlayingMembers() []*Member {
	if x != nil {
		return x.PlayingMembers
	}
	return nil
}

func (x *RoomInfoReply) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *RoomInfoReply) GetMsgID() int32 {
	if x != nil {
		return x.MsgID
	}
	return 0
}

func (x *RoomInfoReply) GetChangeMemeber() *Member {
	if x != nil {
		return x.ChangeMemeber
	}
	return nil
}

func (x *RoomInfoReply) GetTotolQuestion() int32 {
	if x != nil {
		return x.TotolQuestion
	}
	return 0
}

func (x *RoomInfoReply) GetCurQuestion() int32 {
	if x != nil {
		return x.CurQuestion
	}
	return 0
}

func (x *RoomInfoReply) GetQuestion() *Question {
	if x != nil {
		return x.Question
	}
	return nil
}

func (x *RoomInfoReply) GetToTalTime() int32 {
	if x != nil {
		return x.ToTalTime
	}
	return 0
}

func (x *RoomInfoReply) GetMaxMemeber() int32 {
	if x != nil {
		return x.MaxMemeber
	}
	return 0
}

func (x *RoomInfoReply) GetBattleRoomID() int32 {
	if x != nil {
		return x.BattleRoomID
	}
	return 0
}

type RoomChangeState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State int32 `protobuf:"varint,1,opt,name=State,proto3" json:"State,omitempty"`
}

func (x *RoomChangeState) Reset() {
	*x = RoomChangeState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_room_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomChangeState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomChangeState) ProtoMessage() {}

func (x *RoomChangeState) ProtoReflect() protoreflect.Message {
	mi := &file_pb_room_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomChangeState.ProtoReflect.Descriptor instead.
func (*RoomChangeState) Descriptor() ([]byte, []int) {
	return file_pb_room_proto_rawDescGZIP(), []int{31}
}

func (x *RoomChangeState) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

var File_pb_room_proto protoreflect.FileDescriptor

var file_pb_room_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x62, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x38, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x29, 0x0a, 0x0f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52,
	0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22, 0x2c, 0x0a, 0x12, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x6f, 0x6f,
	0x6d, 0x49, 0x44, 0x22, 0x2a, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22,
	0x40, 0x0a, 0x0e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x21, 0x0a, 0x0b, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x46, 0x61, 0x69, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x30, 0x0a, 0x16, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x6f, 0x6f,
	0x6d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22, 0x2c, 0x0a, 0x14, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x6f, 0x6f, 0x6d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x1e, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x13, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x6f, 0x6f,
	0x6d, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x75, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x11, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x52, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x39, 0x0a, 0x12, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0x42, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x08,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x6f, 0x6f, 0x6d,
	0x50, 0x72, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x23, 0x0a,
	0x0f, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55,
	0x72, 0x6c, 0x22, 0x32, 0x0a, 0x18, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22, 0x2e, 0x0a, 0x16, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x24, 0x0a, 0x0e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x75, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x0a,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f,
	0x6f, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d,
	0x49, 0x44, 0x12, 0x23, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x3a, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x0c, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x06, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x22, 0x0a, 0x0a, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x4a, 0x0a, 0x0b, 0x4f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x06, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x21, 0x0a, 0x09, 0x4f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x6c, 0x0a, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52,
	0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x40, 0x0a, 0x0e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xd6, 0x01, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x41, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x41, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x42, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x42,
	0x12, 0x18, 0x0a, 0x07, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x43, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x5f, 0x0a, 0x0d,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22, 0xd7, 0x02,
	0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x63,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x49, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x49, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73,
	0x52, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x44, 0x65, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x49, 0x73, 0x44, 0x65, 0x61, 0x64, 0x12, 0x23, 0x0a, 0x06, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x6b, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53,
	0x6b, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x22, 0x0a,
	0x0c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xcb, 0x03, 0x0a, 0x0d, 0x52, 0x6f, 0x6f, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f,
	0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x44, 0x12, 0x33, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0e, 0x50, 0x6c, 0x61,
	0x79, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x44,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x31, 0x0a,
	0x0d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x65, 0x62, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x65, 0x62, 0x65, 0x72,
	0x12, 0x24, 0x0a, 0x0d, 0x54, 0x6f, 0x74, 0x6f, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x54, 0x6f, 0x74, 0x6f, 0x6c, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x75, 0x72, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x43, 0x75, 0x72,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x54, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x6f, 0x54, 0x61, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x65, 0x62, 0x65, 0x72, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x65, 0x62, 0x65,
	0x72, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22, 0x27, 0x0a, 0x0f, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x32, 0x87,
	0x05, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x42, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x12, 0x1d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x38, 0x0a, 0x06, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x0f, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x05, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x11,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x04, 0x4f, 0x76, 0x65,
	0x72, 0x12, 0x10, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0e, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x1a, 0x14, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x00, 0x12, 0x3a, 0x0a, 0x09, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x15, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x00, 0x12, 0x3e,
	0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x00, 0x12, 0x40,
	0x0a, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x12, 0x15, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x00,
	0x12, 0x3e, 0x0a, 0x11, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x00,
	0x12, 0x36, 0x0a, 0x07, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x13, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x6d, 0x73, 0x67,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_room_proto_rawDescOnce sync.Once
	file_pb_room_proto_rawDescData = file_pb_room_proto_rawDesc
)

func file_pb_room_proto_rawDescGZIP() []byte {
	file_pb_room_proto_rawDescOnce.Do(func() {
		file_pb_room_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_room_proto_rawDescData)
	})
	return file_pb_room_proto_rawDescData
}

var file_pb_room_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_pb_room_proto_goTypes = []interface{}{
	(*RoomServerConnectRequest)(nil), // 0: msg.RoomServerConnectRequest
	(*CreateRoomRequest)(nil),        // 1: msg.CreateRoomRequest
	(*CreateRoomReply)(nil),          // 2: msg.CreateRoomReply
	(*RoomInfoGetRequest)(nil),       // 3: msg.RoomInfoGetRequest
	(*MatchRoomRequest)(nil),         // 4: msg.MatchRoomRequest
	(*MatchRoomReply)(nil),           // 5: msg.MatchRoomReply
	(*RoomAddFail)(nil),              // 6: msg.RoomAddFail
	(*MatchRoomCancelRequest)(nil),   // 7: msg.MatchRoomCancelRequest
	(*MatchRoomCancelReply)(nil),     // 8: msg.MatchRoomCancelReply
	(*RoomTime)(nil),                 // 9: msg.RoomTime
	(*MemberReliveRequest)(nil),      // 10: msg.MemberReliveRequest
	(*MemberReliveReply)(nil),        // 11: msg.MemberReliveReply
	(*MatchMemberRequest)(nil),       // 12: msg.MatchMemberRequest
	(*MatchMemberReply)(nil),         // 13: msg.MatchMemberReply
	(*RoomPreAddRequest)(nil),        // 14: msg.RoomPreAddRequest
	(*RoomPreAddReply)(nil),          // 15: msg.RoomPreAddReply
	(*MatchMemberCancelRequest)(nil), // 16: msg.MatchMemberCancelRequest
	(*MatchMemberCancelReply)(nil),   // 17: msg.MatchMemberCancelReply
	(*OfflineRequest)(nil),           // 18: msg.OfflineRequest
	(*AddRequest)(nil),               // 19: msg.AddRequest
	(*AddReply)(nil),                 // 20: msg.AddReply
	(*LeaveRequest)(nil),             // 21: msg.LeaveRequest
	(*LeaveReply)(nil),               // 22: msg.LeaveReply
	(*OverRequest)(nil),              // 23: msg.OverRequest
	(*OverReply)(nil),                // 24: msg.OverReply
	(*Answer)(nil),                   // 25: msg.Answer
	(*AnswerEndReply)(nil),           // 26: msg.AnswerEndReply
	(*Question)(nil),                 // 27: msg.Question
	(*MemberRequest)(nil),            // 28: msg.MemberRequest
	(*Member)(nil),                   // 29: msg.Member
	(*RoomInfoReply)(nil),            // 30: msg.RoomInfoReply
	(*RoomChangeState)(nil),          // 31: msg.RoomChangeState
}
var file_pb_room_proto_depIdxs = []int32{
	29, // 0: msg.CreateRoomRequest.member:type_name -> msg.Member
	30, // 1: msg.MatchRoomReply.RoomInfo:type_name -> msg.RoomInfoReply
	25, // 2: msg.MemberReliveReply.Answer:type_name -> msg.Answer
	29, // 3: msg.MatchMemberRequest.Member:type_name -> msg.Member
	30, // 4: msg.MatchMemberReply.RoomInfo:type_name -> msg.RoomInfoReply
	29, // 5: msg.AddRequest.member:type_name -> msg.Member
	30, // 6: msg.AddReply.RoomInfo:type_name -> msg.RoomInfoReply
	29, // 7: msg.LeaveRequest.member:type_name -> msg.Member
	29, // 8: msg.OverRequest.member:type_name -> msg.Member
	30, // 9: msg.AnswerEndReply.RoomInfo:type_name -> msg.RoomInfoReply
	25, // 10: msg.Member.Answer:type_name -> msg.Answer
	29, // 11: msg.RoomInfoReply.PrepareMembers:type_name -> msg.Member
	29, // 12: msg.RoomInfoReply.PlayingMembers:type_name -> msg.Member
	29, // 13: msg.RoomInfoReply.ChangeMemeber:type_name -> msg.Member
	27, // 14: msg.RoomInfoReply.Question:type_name -> msg.Question
	0,  // 15: msg.Room.Connect:input_type -> msg.RoomServerConnectRequest
	1,  // 16: msg.Room.Create:input_type -> msg.CreateRoomRequest
	19, // 17: msg.Room.Add:input_type -> msg.AddRequest
	21, // 18: msg.Room.Leave:input_type -> msg.LeaveRequest
	23, // 19: msg.Room.Over:input_type -> msg.OverRequest
	25, // 20: msg.Room.AnswerQuestion:input_type -> msg.Answer
	4,  // 21: msg.Room.MatchRoom:input_type -> msg.MatchRoomRequest
	12, // 22: msg.Room.MatchMember:input_type -> msg.MatchMemberRequest
	4,  // 23: msg.Room.MatchRoomCancel:input_type -> msg.MatchRoomRequest
	21, // 24: msg.Room.MatchMemberCancel:input_type -> msg.LeaveRequest
	18, // 25: msg.Room.Offline:input_type -> msg.OfflineRequest
	2,  // 26: msg.Room.Connect:output_type -> msg.CreateRoomReply
	31, // 27: msg.Room.Create:output_type -> msg.RoomChangeState
	31, // 28: msg.Room.Add:output_type -> msg.RoomChangeState
	31, // 29: msg.Room.Leave:output_type -> msg.RoomChangeState
	31, // 30: msg.Room.Over:output_type -> msg.RoomChangeState
	31, // 31: msg.Room.AnswerQuestion:output_type -> msg.RoomChangeState
	31, // 32: msg.Room.MatchRoom:output_type -> msg.RoomChangeState
	31, // 33: msg.Room.MatchMember:output_type -> msg.RoomChangeState
	31, // 34: msg.Room.MatchRoomCancel:output_type -> msg.RoomChangeState
	31, // 35: msg.Room.MatchMemberCancel:output_type -> msg.RoomChangeState
	31, // 36: msg.Room.Offline:output_type -> msg.RoomChangeState
	26, // [26:37] is the sub-list for method output_type
	15, // [15:26] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_pb_room_proto_init() }
func file_pb_room_proto_init() {
	if File_pb_room_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_room_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomServerConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoomReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomInfoGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchRoomReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomAddFail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchRoomCancelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchRoomCancelReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberReliveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberReliveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchMemberReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomPreAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomPreAddReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchMemberCancelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchMemberCancelReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfflineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Answer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerEndReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Question); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_room_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomChangeState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_room_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_room_proto_goTypes,
		DependencyIndexes: file_pb_room_proto_depIdxs,
		MessageInfos:      file_pb_room_proto_msgTypes,
	}.Build()
	File_pb_room_proto = out.File
	file_pb_room_proto_rawDesc = nil
	file_pb_room_proto_goTypes = nil
	file_pb_room_proto_depIdxs = nil
}
