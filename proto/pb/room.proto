syntax = "proto3";

package msg;

option go_package = "/msg";

service Room {
    rpc Connect (RoomServerConnectRequest) returns (stream CreateRoomReply){}           // 连接房间服务
    rpc Create (CreateRoomRequest) returns (RoomChangeState){}           // 创建房间
    rpc Add (AddRequest) returns (RoomChangeState){}                            // 加入房间
    rpc Leave (LeaveRequest) returns (RoomChangeState){}                        // 离开房间
    rpc Over (OverRequest) returns (RoomChangeState){}                          // 解散房间
    rpc AnswerQuestion (Answer) returns (RoomChangeState) {}                    // 回答问题
    rpc MatchRoom (MatchRoomRequest) returns (RoomChangeState) {}               // 匹配房间
    rpc MatchMember (MatchMemberRequest) returns (RoomChangeState) {}           // 匹配单人
    rpc MatchRoomCancel (MatchRoomRequest) returns (RoomChangeState) {}         // 房间匹配取消
    rpc MatchMemberCancel (LeaveRequest) returns (RoomChangeState) {}           // 个人匹配取消
    rpc Offline (OfflineRequest) returns (RoomChangeState) {}                   // 离线
}

message RoomServerConnectRequest {

}


//-----------------房间创建---------------------
message CreateRoomRequest {
    Member member = 1;          // 成员信息
}

message CreateRoomReply {
    int32 RoomID = 1;           // 创建房间回复
}

// 房间信息获取
message RoomInfoGetRequest {
    int32 RoomID = 1; 
}

//-----------------房间匹配---------------------
message MatchRoomRequest {
    int32 RoomID = 1;
}

message MatchRoomReply {
    RoomInfoReply RoomInfo = 1;
}

message RoomAddFail {
    int32 Code = 1;
}

//-----------------取消房间匹配---------------------
message MatchRoomCancelRequest{
    int32 RoomID = 1;
}

message MatchRoomCancelReply {
    bool State = 1;
}

// 房间计时
message RoomTime {
    int32 Time = 1;
}

// 复活消息 
message MemberReliveRequest {
    int32 RoomID = 1;
    int32 BattleRoomID = 2;
    string Uuid = 3;
}

// 复活消息返回
message MemberReliveReply {
    string Uuid = 1;
    Answer Answer = 2;  
}


//-----------------成员匹配---------------------
message MatchMemberRequest {
    Member Member = 1;          // 匹配人信息
}

message MatchMemberReply {
    RoomInfoReply RoomInfo = 1;
}

message RoomPreAddRequest {
    
}

message RoomPreAddReply {
    string Url = 1;
}

//-----------------取消成员匹配---------------------
message MatchMemberCancelRequest{
    int32 RoomID = 1;
}

message MatchMemberCancelReply {
    bool State = 1;
}


//-----------------离线---------------------
message OfflineRequest {
    string Uuid  = 1;            // 离线玩家的uuid信息
}


//-----------------加入成员---------------------
message AddRequest {
    int32 RoomID = 2;           // 要加入的房间ID
    Member member = 1;          // 要加入的成员
}

message AddReply {
    RoomInfoReply RoomInfo = 1;
}


//-----------------离开成员---------------------
message LeaveRequest {
    int32 RoomID = 2;           // 要加入的房间ID
    Member member = 1;          // 要加入的成员
}

message LeaveReply {
    bool State = 1;
}


//-----------------房间结束---------------------
message OverRequest {
    int32 RoomID = 2;           // 要加入的房间ID
    Member member = 1;          // 要加入的成员
}

message OverReply {
    bool State = 1;         
}

//-----------------回答问题---------------------
message Answer {
    int32 RoomID = 1;           // 对应的房间ID
    string Uuid = 2;            // 用户服务端uuid
    int32 QuestionID = 3;       // 问题ID
    string Result = 4;          // 回答结果
}

message AnswerEndReply {
    RoomInfoReply RoomInfo = 1;
}

message Question {
    int32 ID = 1;           // 题库ID
    string Question = 2;    // 问题
    string AnswerA = 3;     // 答案A
    string AnswerB = 4;     // 答案B
    string AnswerC = 5;     // 答案C
    string AnswerD = 6;     // 答案D
    string RightAnswer = 7; // 正确答案
}

message MemberRequest {
    string Uuid = 1;            // 用户服务端uuid
    int32 RoomID = 11;          // 房间ID
    int32 BattleRoomID = 12;    // 战斗房间ID
}

//-----------------成员---------------------
message Member {
    string Uuid = 1;            // 用户服务端uuid
    string Uid = 2;             // 用户Uid
    string Nickname =3;         // 用户昵称
    string Icon = 4;            // 用户头像
    bool IsMaster = 5;          // 是否房主
    bool IsRobot = 6;           // 是否是机器人
    bool IsInvite = 7;          // 是否邀请的人
    bool IsDead = 8;            // 是否死亡
    repeated Answer Answer = 9; // 回答
    int32 SkinID = 10;          // 皮肤ID
    int32 RoomID = 11;          // 房间ID
    int32 BattleRoomID = 12;    // 战斗房间ID
    int32 State = 13;           // 角色状态（匹配，准备，战斗）
}

message RoomInfoReply {
    int32 RoomID = 1;           // 房间ID
    repeated Member PrepareMembers = 2;       // 准备成员列表
    repeated Member PlayingMembers = 3;       // 正在游戏成员列表
    int32 Progress = 4;         // 当前进程(时间秒)
    int32 MsgID = 5;    // 消息ID
    Member ChangeMemeber = 6; // 变更成员
    int32 TotolQuestion = 7;
    int32 CurQuestion = 8;
    Question Question = 9;    // 问题
    int32 ToTalTime = 10;       // 答题总时间
    int32 MaxMemeber = 11;
    int32 BattleRoomID = 12;     // 战斗房间ID
}

message RoomChangeState {
    int32 State = 1;
}

